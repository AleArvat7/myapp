name: CI/CD
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: myapp
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d myapp"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      # Install psql so we can init our schema
      - name: Install Postgres client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Build Docker image
        run: docker build -t myapp:latest .

      # Wait for the Postgres service to be ready
      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -U user -d myapp; do
            sleep 1
          done

      # Initialize the DB schema
      - name: Initialize DB schema
        run: |
          psql -h localhost -U user -d myapp -f init.sql

      # Run and smoke-test your API on port 3000
      - name: Test API
        run: |
          docker run -d \
            --name api-test \
            -e DATABASE_URL=postgres://user:pass@localhost:5432/myapp \
            -p 3000:3000 \
            myapp:latest
          sleep 5
          curl -f http://localhost:3000/items

      # Finally, deploy to Kind/k8s if you have it available
      - name: Load to Kind & Deploy
        run: |
          kind load docker-image myapp:latest --name myapp-cluster
          kubectl apply -f k8s/
